{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Pokemon() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1];\n\n  var _loop = function _loop(i) {\n    var pokemonCount = pokemonCount + 1;\n    useEffect(function () {\n      fetch('https://pokeapi.co/api/v2/pokemon/' + pokemonCount).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result.name);\n        setIsLoaded(true);\n        setItems(result);\n      }, function (error) {\n        setIsLoaded(true);\n        setError(error);\n      });\n    }, []);\n  };\n\n  for (var i = 0; i < 150; i++) {\n    _loop(i);\n  }\n\n  if (error) {\n    return _jsxs(\"div\", {\n      children: [\"Erreur : \", error.message]\n    });\n  } else if (!isLoaded) {\n    return _jsx(\"div\", {\n      children: \"Chargement...\"\n    });\n  } else {\n    return _jsx(\"ul\", {\n      children: items.name\n    });\n  }\n}\n\nexport default Pokemon;","map":{"version":3,"sources":["C:/Users/RABECLEG.Charles/Documents/ReactNative/pokemonAPI/components/PokeAPI.js"],"names":["useState","useEffect","Pokemon","error","setError","isLoaded","setIsLoaded","items","setItems","i","pokemonCount","fetch","then","res","json","result","console","log","name","message"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,OAAT,GAAmB;AACjB,kBAA0BF,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCJ,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAHiB,6BAwBRC,CAxBQ;AAyBZ,QAAIC,YAAY,GAAGA,YAAY,GAAG,CAAlC;AACHT,IAAAA,SAAS,CAAC,YAAM;AACZU,MAAAA,KAAK,CAAC,uCAAuCD,YAAxC,CAAL,CACGE,IADH,CACQ,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OADR,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAZ,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,OAPL,EAQI,UAACZ,KAAD,EAAW;AACTG,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAXL;AAaD,KAdM,EAcJ,EAdI,CAAT;AA1Be;;AAwBjB,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAAA,UAArBA,CAAqB;AAiB7B;;AAED,MAAIN,KAAJ,EAAW;AACT,WAAO;AAAA,8BAAeA,KAAK,CAACgB,OAArB;AAAA,MAAP;AACD,GAFD,MAEO,IAAI,CAACd,QAAL,EAAe;AACpB,WAAO;AAAA;AAAA,MAAP;AACD,GAFM,MAEA;AACL,WACE;AAAA,gBAGOE,KAAK,CAACW;AAHb,MADF;AASD;AACF;;AAED,eAAehB,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nfunction Pokemon() {\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [items, setItems] = useState([])\r\n  // Remarque : le tableau vide de dépendances [] indique\r\n  // que useEffect ne s’exécutera qu’une fois, un peu comme\r\n  // componentDidMount()\r\n\r\n//   useEffect(() => {\r\n//     fetch('https://pokeapi.co/api/v2/pokemon/')\r\n//       .then((res) => res.json())\r\n//       .then(\r\n//         (result) => {\r\n//           console.log(result.name)\r\n//           setIsLoaded(true)\r\n//           setItems(result)\r\n//         },\r\n//         (error) => {\r\n//           setIsLoaded(true)\r\n//           setError(error)\r\n//         }\r\n//       )\r\n//   }, [])\r\n\r\n  for (let i = 0; i < 150; i++) {\r\n       let pokemonCount = pokemonCount + 1 \r\n    useEffect(() => {\r\n        fetch('https://pokeapi.co/api/v2/pokemon/' + pokemonCount)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              console.log(result.name)\r\n              setIsLoaded(true)\r\n              setItems(result)\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true)\r\n              setError(error)\r\n            }\r\n          )\r\n      }, [])\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur : {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return <div>Chargement...</div>\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {/* {items.map(item => ( */}\r\n          {/* <li key={item.name}> */}\r\n            {items.name}\r\n          {/* </li> */}\r\n        {/* ))} */}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}